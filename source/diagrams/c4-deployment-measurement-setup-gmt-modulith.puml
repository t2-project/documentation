@startuml c4-deployment-measurement-setup-gmt-modulith

title Measurement Setup - Green Metrics Tool & T2-Modulith

' C4 (https://github.com/plantuml-stdlib/C4-PlantUML/)
!include https://raw.githubusercontent.com/plantuml-stdlib/C4-PlantUML/master/C4_Deployment.puml

' Icons (https://github.com/tupadr3/plantuml-icon-font-sprites)
!define DEVICONS2 https://raw.githubusercontent.com/tupadr3/plantuml-icon-font-sprites/master/devicons2
!define FONTAWESOME https://raw.githubusercontent.com/tupadr3/plantuml-icon-font-sprites/master/font-awesome-5
!include https://raw.githubusercontent.com/tupadr3/plantuml-icon-font-sprites/master/common.puml
!include DEVICONS2/python.puml
!include DEVICONS2/docker.puml
!include DEVICONS2/spring.puml
!include DEVICONS2/mongodb.puml
!include DEVICONS2/postgresql.puml
!include FONTAWESOME/chart_bar.puml

top to bottom direction
skinparam ranksep 5

Person(user, "Researcher / Developer") {
    Deployment_Node(browser, "Web Browser"){
        Container(browser_gmt, "Green Metrics Tool Frontend", "", "", $sprite="chart_bar")
    }
}

Deployment_Node(machine, "GMT Measurement Machine") {

    Container_Boundary(gmt, "GMT Deployment") {
        Container(gmt_scripts, "Measurement\nScripts", "Python, C", $sprite="python")
        Container(gmt_frontend, "Frontend", "Docker", $sprite="docker")
        Container(gmt_api, "API Server", "Docker", $sprite="docker")
        ContainerDb(gmt_db, "Database", "Docker", $sprite="docker")
    }

    Container_Boundary(usage_scenario, "T2-Modulith\nUsage Scenario") {
        Container(t2_modulith, "Modulith", "Docker", "Provides the API endpoints. Payment to credit institute is disabled in config.", $sprite="docker")
        ContainerDb(t2_postgres, "Postgres", "Docker", $sprite="docker")
        ContainerDb(t2_mongodb, "MongoDB", "Docker", $sprite="docker")
        Container(jmeter, "JMeter", "Docker", "Executes predefined test plan to send requests to API of the Modulith.", $sprite="docker")
    }
}

Rel(browser_gmt, gmt_frontend, "Add a new measurement job", "json/HTTP")
Rel(gmt_frontend, browser_gmt, "Get measurement results", "json/HTTP")

Rel(gmt_scripts, gmt_db, "")
Rel(gmt_frontend, gmt_api, "")
Rel(gmt_api, gmt_db, "")

Rel(t2_modulith, t2_postgres, "")
Rel(t2_modulith, t2_mongodb, "")
Rel(jmeter, t2_modulith, "Execute\nAPI\nrequests", "json/HTTP")

Rel_U(gmt_scripts, usage_scenario, "Orchestrate\nDocker\ncontainers")
Rel_U(gmt_scripts, jmeter, "Start\nflow")

@enduml
