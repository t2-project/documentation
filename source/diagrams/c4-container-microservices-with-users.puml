@startuml c4-container-microservices-with-users

title Container Diagram for T2-Microservices

!include https://raw.githubusercontent.com/plantuml-stdlib/C4-PlantUML/master/C4_Container.puml

' Icons (https://github.com/tupadr3/plantuml-icon-font-sprites)
!define ICONS https://raw.githubusercontent.com/tupadr3/plantuml-icon-font-sprites/master
!include ICONS/common.puml
!include ICONS/devicons2/spring.puml
!include ICONS/devicons2/mongodb.puml
!include ICONS/devicons2/postgresql.puml

AddElementTag("saga", $bgColor="#SlateBlue", $legendText="saga")

Person(user, "User", "Buys tea using the UI of the store.")
Person(researcher, "Researcher", "Executes various tests using the API's of the store.")

System_Boundary(t2_project, "T2-Microservices") {

    Boundary(microservices, "Microservices") {
        Container(uibackend, "UIBackend", "Java, Spring MVC", $sprite="spring")
        Container(ui, "UI", "Java, Spring MVC, JSP", $sprite="spring")
        Container(inventory, "Inventory", "Java, Spring MVC", $sprite="spring", $tags="saga")
        Container(order, "Order", "Java, Spring MVC", $sprite="spring", $tags="saga")
        Container(payment, "Payment", "Java, Spring MVC", $sprite="spring", $tags="saga")
        Container(orchestrator, "Orchestrator", "Java, Spring MVC", $sprite="spring", $tags="saga")
        Container(cart, "Cart", "Java, Spring MVC", $sprite="spring")
    }

    ContainerDb(db_inventory, "Inventory Database", "PostgreSQL", $sprite="postgresql")
    ContainerDb(db_saga, "Saga Database", "PostgreSQL", $sprite="postgresql")
    ContainerDb(db_cart, "Cart Database", "MongoDB", $sprite="mongodb")
    ContainerDb(db_order, "Order Database", "MongoDB", $sprite="mongodb")
}

Container_Ext(creditinstitute, "CreditInstitute", "Java, Spring MVC", $sprite="spring")

Rel(researcher, uibackend, "Uses", "JSON/HTTP")
Rel(user, ui, "Uses", "JSON/HTTP")

Rel_Neighbor(ui, uibackend, "Uses", "JSON/HTTP")
Rel(uibackend, cart, "Uses", "JSON/HTTP")
Rel(uibackend, orchestrator, "Uses", "JSON/HTTP")
Rel(uibackend, inventory, "Uses", "JSON/HTTP")
Rel(orchestrator, inventory, "Uses", "via Kafka")
Rel(orchestrator, order, "Uses", "via Kafka")
Rel(orchestrator, payment, "Uses", "via Kafka")

Rel(cart, db_cart, "Reads from /\nwrites to", "TCP")
Rel(order, db_order, "Reads from /\nwrites to", "TCP")
Rel(orchestrator, db_saga, "Reads from /\nwrites to", "JDBC")
Rel(inventory, db_inventory, "Reads from /\nwrites to", "JDBC")

Rel(payment, creditinstitute, "Makes\ncalls to", "JSON/HTTP")

' SHOW_LEGEND()

@enduml
